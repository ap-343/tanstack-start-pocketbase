/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoggedInImport } from './routes/_loggedIn'
import { Route as IndexImport } from './routes/index'
import { Route as LoggedInDashboardImport } from './routes/_loggedIn/dashboard'
import { Route as AuthLogoutImport } from './routes/_auth/logout'
import { Route as AuthLoginImport } from './routes/_auth/login'

// Create/Update Routes

const LoggedInRoute = LoggedInImport.update({
  id: '/_loggedIn',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const LoggedInDashboardRoute = LoggedInDashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => LoggedInRoute,
} as any)

const AuthLogoutRoute = AuthLogoutImport.update({
  id: '/_auth/logout',
  path: '/logout',
  getParentRoute: () => rootRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  id: '/_auth/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_loggedIn': {
      id: '/_loggedIn'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LoggedInImport
      parentRoute: typeof rootRoute
    }
    '/_auth/login': {
      id: '/_auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof rootRoute
    }
    '/_auth/logout': {
      id: '/_auth/logout'
      path: '/logout'
      fullPath: '/logout'
      preLoaderRoute: typeof AuthLogoutImport
      parentRoute: typeof rootRoute
    }
    '/_loggedIn/dashboard': {
      id: '/_loggedIn/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof LoggedInDashboardImport
      parentRoute: typeof LoggedInImport
    }
  }
}

// Create and export the route tree

interface LoggedInRouteChildren {
  LoggedInDashboardRoute: typeof LoggedInDashboardRoute
}

const LoggedInRouteChildren: LoggedInRouteChildren = {
  LoggedInDashboardRoute: LoggedInDashboardRoute,
}

const LoggedInRouteWithChildren = LoggedInRoute._addFileChildren(
  LoggedInRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof LoggedInRouteWithChildren
  '/login': typeof AuthLoginRoute
  '/logout': typeof AuthLogoutRoute
  '/dashboard': typeof LoggedInDashboardRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof LoggedInRouteWithChildren
  '/login': typeof AuthLoginRoute
  '/logout': typeof AuthLogoutRoute
  '/dashboard': typeof LoggedInDashboardRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_loggedIn': typeof LoggedInRouteWithChildren
  '/_auth/login': typeof AuthLoginRoute
  '/_auth/logout': typeof AuthLogoutRoute
  '/_loggedIn/dashboard': typeof LoggedInDashboardRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '' | '/login' | '/logout' | '/dashboard'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '' | '/login' | '/logout' | '/dashboard'
  id:
    | '__root__'
    | '/'
    | '/_loggedIn'
    | '/_auth/login'
    | '/_auth/logout'
    | '/_loggedIn/dashboard'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LoggedInRoute: typeof LoggedInRouteWithChildren
  AuthLoginRoute: typeof AuthLoginRoute
  AuthLogoutRoute: typeof AuthLogoutRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LoggedInRoute: LoggedInRouteWithChildren,
  AuthLoginRoute: AuthLoginRoute,
  AuthLogoutRoute: AuthLogoutRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_loggedIn",
        "/_auth/login",
        "/_auth/logout"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_loggedIn": {
      "filePath": "_loggedIn.tsx",
      "children": [
        "/_loggedIn/dashboard"
      ]
    },
    "/_auth/login": {
      "filePath": "_auth/login.tsx"
    },
    "/_auth/logout": {
      "filePath": "_auth/logout.tsx"
    },
    "/_loggedIn/dashboard": {
      "filePath": "_loggedIn/dashboard.tsx",
      "parent": "/_loggedIn"
    }
  }
}
ROUTE_MANIFEST_END */
